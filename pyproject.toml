[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-keel"
version = "0.1.0"
description = "A versatile, production-ready Django project template"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    { name = "Sanyam Khurana", email = "sanyam@sanyamkhurana.com" }
]
keywords = ["django", "template", "copier", "saas", "production"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.2.0",
    "copier>=9.0.0",
    "pyyaml>=6.0.0",
    "ruff>=0.6.9",
    "mypy>=1.11.2",
    "plumbum>=1.8.0",
    "pre-commit>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/CuriousLearner/django-keel"
Documentation = "https://django-keel.readthedocs.io"
Repository = "https://github.com/CuriousLearner/django-keel"
Issues = "https://github.com/CuriousLearner/django-keel/issues"

[tool.ruff]
# Target Python 3.12+
target-version = "py312"
line-length = 100

[tool.ruff.lint]
# Enable comprehensive rule sets
select = [
    "F",     # Pyflakes
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "RUF",   # Ruff-specific rules
]

ignore = []

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = false
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
# Test files can use fixtures and have imports that appear unused
"tests/*" = ["F811"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"
